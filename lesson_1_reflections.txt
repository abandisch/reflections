How did viewing a diff between two versions of a file help you see the bug that was introduced? 
	- the diff command narrowed the differences between two big files just to a few small lines that made it easy to spot the difference and locate the bug in the code.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	- By being able to access previous versions of the code, you'll be able to undo potenial mistakes/bugs	

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	- Pro: You can commit your work at logical points, so that when you review or need to find a previous version, it's easier to find
	- Con: Manually saving probably needs to be learned/remembered. I imagine it would be easy to forget to commit after a logical point in time and just move on to the next section fo code

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	- Don't know.

How can you use the commands git log and git diff to view the history of files?
	- git log [--stat]
	- git diff <commit-ish> <commit-ish>

How might using version control make you more confident to make changes that could break something?
	- Everything is reversable

Now that you have your workspace set up, what do you want to try using Git for?
	- Everything!
